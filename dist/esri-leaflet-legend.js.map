{"version":3,"sources":["../src/Util.js","../src/Services/MapService.js","../src/Tasks/Legend.js","../src/Layers/DynamicMapLayer.js","../src/Controls/Legend.js"],"names":["EsriLeaflet","Util","reduce","values","initial","fn","cb","context","next","index","sync","i","length","done","curr","err","val","call","Services","MapService","include","legend","callback","Tasks","Legend","this","run","Task","extend","path","params","f","_service","request","_request","Layers","DynamicMapLayer","Controls","L","Control","options","listTemplate","layerTemplate","listRowTemplate","emptyLabel","container","initialize","layers","_layers","isArray","prototype","onAdd","map","DomUtil","create","DomEvent","disableScrollPropagation","disableClickPropagation","_load","esri","layer","concat","_onLoad","error","layersHtml","len","legendsHtml","j","jj","layerLegend","JSON","parse","stringify","_validateLegendLabel","template","layerName","legends","_container","innerHTML","label","replace"],"mappings":"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","file":"esri-leaflet-legend.js","sourcesContent":["/**\n * @example\n * <code>\n * L.esri.Util.queue(\n *   [1, 2, 3], [], function(curr, item, cb){\n *     setTimeout(function(){\n *       cb(null, curr.concat([item + 10]));\n *     }, 200);\n *   }, function(err, result) {\n *     console.log(result); // [11, 12, 13]\n * });\n * </code>\n * @param  {Array.<*>} values\n * @param  {*}         initial\n * @param  {Function}  fn       process item fn(memo, item, callback)\n * @param  {Function}  done     queue complete\n * @param  {*=}        context\n */\nEsriLeaflet.Util.reduce = function(values, initial, fn, cb, context) {\n  var curr = initial;\n\n  function next(index) {\n    var sync = true;\n    for (var i = index; i < values.length; i++) {\n      var done = false;\n      fn(curr, values[i], function(err, val) {\n        if (err) {\n          return cb.call(context, err, curr);\n        }\n        done = true;\n        curr = val;\n        if (!sync) {\n          next(i + 1);\n        }\n      });\n      sync = done;\n      if (!sync) {\n        return;\n      }\n    }\n    cb.call(context, null, curr);\n  }\n\n  next(0);\n};\n","EsriLeaflet.Services.MapService.include({\n\n  legend: function(callback, context) {\n    return new EsriLeaflet.Tasks.Legend(this).run(callback, context);\n  }\n\n});\n","EsriLeaflet.Tasks.Legend = EsriLeaflet.Tasks.Task.extend({\n  path: 'legend',\n\n  params: {\n    f: 'json'\n  },\n\n  run: function(callback, context) {\n    if (this._service) {\n      return this._service.request(this.path, this.params, callback, context);\n    } else {\n      return this._request('request', this.path, this.params, callback, context);\n    }\n  }\n\n});\n\nEsriLeaflet.Tasks.legend = function(params) {\n  return new EsriLeaflet.Tasks.Legend(params);\n};\n","EsriLeaflet.Layers.DynamicMapLayer.include({\n\n  legend: function(callback, context) {\n    return this._service.legend(callback, context);\n  }\n\n});\n","EsriLeaflet.Controls.Legend = L.Control.extend({\n\n  options: {\n    listTemplate: '<ul>{layers}</ul>',\n    layerTemplate: '<li><strong>{layerName}</strong><ul>{legends}</ul></li>',\n    listRowTemplate: '<li><img width=\"{width}\" height=\"{height}\" src=\"data:{contentType};base64,{imageData}\"><span>{label}</span></li>',\n    emptyLabel: '<all values>',\n    container: null\n  },\n\n  initialize: function(layers, options) {\n    this._layers = L.Util.isArray(layers) ? layers : [layers];\n    L.Control.prototype.initialize.call(this, options);\n  },\n\n  onAdd: function(map) {\n    var container = this.options.container ||\n        L.DomUtil.create('div', 'leaflet-legend-control leaflet-bar');\n    L.DomEvent\n      .disableScrollPropagation(container)\n      .disableClickPropagation(container);\n\n    if (this._layers.length) {\n      this._load();\n    }\n    return container;\n  },\n\n  _load: function() {\n    L.esri.Util.reduce(this._layers, {\n      layers: []\n    }, function(curr, layer, cb) {\n      layer.legend(function(err, legend) {\n        if (err) {\n          return cb(err, curr);\n        }\n        curr.layers = curr.layers.concat(legend.layers);\n        cb(null, curr);\n      });\n    }, this._onLoad, this);\n  },\n\n  _onLoad: function(error, legend) {\n    if (!error) {\n      var layersHtml = '';\n      for (var i = 0, len = legend.layers.length; i < len; i++) {\n        var layer = legend.layers[i];\n        var legendsHtml = '';\n        for (var j = 0, jj = layer.legend.length; j < jj; j++) {\n          var layerLegend = JSON.parse(JSON.stringify(layer.legend[j]));\n          this._validateLegendLabel(layerLegend);\n          legendsHtml += L.Util.template(this.options.listRowTemplate, layerLegend);\n        }\n        layersHtml += L.Util.template(this.options.layerTemplate, {\n          layerName: layer.layerName,\n          legends: legendsHtml\n        });\n      }\n      this._container.innerHTML = L.Util.template(this.options.listTemplate, {\n        layers: layersHtml\n      });\n    }\n  },\n\n  _validateLegendLabel: function(layerLegend) {\n    if (!layerLegend.label && this.options.emptyLabel) {\n      layerLegend.label = this.options.emptyLabel;\n    }\n    layerLegend.label = layerLegend.label.replace(/&/g, '&amp;')\n      .replace(/\"/g, '&quot;')\n      .replace(/'/g, '&#39;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;');\n  }\n\n});\n\nEsriLeaflet.Controls.legend = function(layers, options) {\n  return new L.esri.Controls.Legend(layers, options);\n};\n"]}